def max_absolute_difference(arr):
    n = len(arr)
    leftSmaller = [0] * n
    rightSmaller = [0] * n
    stack = []

    # Find nearest smaller element on the right side
    for i in range(n):
        while stack and arr[stack[-1]] > arr[i]:
            rightSmaller[stack.pop()] = arr[i]
        stack.append(i)

    stack.clear()

    # Find nearest smaller element on the left side
    for i in range(n - 1, -1, -1):
        while stack and arr[stack[-1]] >= arr[i]:
            leftSmaller[stack.pop()] = arr[i]
        stack.append(i)

    max_diff = -1
    for i in range(n):
        diff = abs(rightSmaller[i] - leftSmaller[i])
        max_diff = max(max_diff, diff)

    return max_diff


# Testing the function
arr1 = [2, 1, 8]
print(max_absolute_difference(arr1))  # Output: 1

arr2 = [2, 4, 8, 7, 7, 9, 3]
print(max_absolute_difference(arr2))  # Output: 4

arr3 = [5, 1, 9, 2, 5, 1, 7]
print(max_absolute_difference(arr3))  # Output: 1
